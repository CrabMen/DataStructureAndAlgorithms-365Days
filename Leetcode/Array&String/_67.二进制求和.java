/**
 * 给你两个二进制字符串，返回它们的和（用二进制表示）。
 * 
 * 输入为 非空 字符串且只包含数字 1 和 0。
 *  
 * 示例 1:
 * 
 * 输入: a = "11", b = "1" 输出: "100" 
 * 
 * 示例 2:
 * 
 * 输入: a = "1010", b = "1011" 输出: "10101"  
 * 
 * 提示：
 * 每个字符串仅由字符 '0' 或 '1' 组成。 1 <= a.length, b.length <= 10^4 字符串如果不是 "0" ，就都不含前导零。
 * 
 * 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/add-binary
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */

/**
 * 194 / 294 个通过测试用例
 * 
 * 错误信息: Line 3: java.lang.NumberFormatException: For input string:
 * "10100000100100110110010000010101111011011001101110111111111101000000101111001110001111100001101"
 * under radix 2
 * 
 * 最后执行的输入：
 * "10100000100100110110010000010101111011011001101110111111111101000000101111001110001111100001101"
 * "110101001011101110001111100110001010100001101011101010000011011011001011101111001100000011011110011"
 * 
 */

class Solution {
    public String addBinary(String a, String b) {
        return Integer.toBinaryString(Integer.parseInt(a, 2) + Integer.parseInt(b, 2));
    }
}